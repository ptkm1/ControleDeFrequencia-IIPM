{"ast":null,"code":"var _jsxFileName = \"/home/patrick/Desktop/IIPM_Frequencia/Baseado/front/src/Presentation/Screens/Sandbox.Screen.tsx\",\n    _s = $RefreshSig$();\n\nimport { API } from 'Infrastructure/APIS';\nimport MaterialTable from 'material-table';\nimport React, { useEffect, useState } from 'react'; // import { Container } from './styles';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Screens() {\n  _s();\n\n  const [frequencia, setFrequencia] = useState(); // a que ser치 renderizada na tabela.\n\n  const [NovaFrequencia, setNovaFrequencia] = useState(); // a quqe ser치 enviada para atualizar no backend\n\n  console.log(NovaFrequencia);\n  console.warn(frequencia);\n  const columns = [{\n    title: \"Nome\",\n    field: \"nome\",\n    editable: false\n  }, {\n    title: \"Cargo\",\n    field: \"cargo\"\n  }, {\n    title: \"janeiro\",\n    field: \"janeiro\"\n  }, {\n    title: \"abril\",\n    field: 'abril'\n  }, {\n    title: \"maio\",\n    field: \"maio\"\n  }, {\n    title: \"junho\",\n    field: \"junho\"\n  }, {\n    title: \"julho\",\n    field: \"julho\"\n  }, {\n    title: \"agosto\",\n    field: \"agosto\"\n  }, {\n    title: \"setembro\",\n    field: \"setembro\"\n  }, {\n    title: \"outubro\",\n    field: \"outubro\"\n  }, {\n    title: \"novembro\",\n    field: \"novembro\"\n  }, {\n    title: \"dezembro\",\n    field: \"dezembro\"\n  }];\n  useEffect(() => {\n    (async () => {\n      const {\n        data\n      } = await API.get(\"/servidor/frequencia\");\n      const frequency = data.map((a, key) => {\n        console.log(a.frequencia);\n        delete a.frequencia.id;\n        const obj2 = Object.assign(a, a.frequencia[0]);\n        return obj2;\n      });\n      setFrequencia(frequency);\n    })();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(MaterialTable, {\n      data: frequencia,\n      columns: columns,\n      editable: {\n        onRowAdd: newRow => new Promise((resolve, reject) => {\n          const updatedRows = [...frequencia, {\n            id: Math.floor(Math.random() * 100),\n            ...newRow\n          }];\n          setTimeout(() => {\n            setFrequencia(updatedRows);\n            setNovaFrequencia(newRow);\n            resolve();\n          }, 2000);\n        }),\n        onRowDelete: selectedRow => new Promise((resolve, reject) => {\n          const index = selectedRow.tableData.id;\n          const updatedRows = [...frequencia];\n          updatedRows.splice(index, 1);\n          setTimeout(() => {\n            setFrequencia(updatedRows);\n            resolve();\n          }, 2000);\n        }),\n        onRowUpdate: (updatedRow, oldRow) => new Promise((resolve, reject) => {\n          const index = oldRow.tableData.id;\n          const updatedRows = [...frequencia];\n          updatedRows[index] = updatedRow;\n          setTimeout(() => {\n            setFrequencia(updatedRows);\n            resolve();\n          }, 2000);\n        })\n      },\n      options: {\n        actionsColumnIndex: -1,\n        addRowPosition: \"first\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Screens, \"dl5FUZe1l9aNGqd9tvU9uXLO0q0=\");\n\n_c = Screens;\nexport default Screens;\n\nvar _c;\n\n$RefreshReg$(_c, \"Screens\");","map":{"version":3,"sources":["/home/patrick/Desktop/IIPM_Frequencia/Baseado/front/src/Presentation/Screens/Sandbox.Screen.tsx"],"names":["API","MaterialTable","React","useEffect","useState","Screens","frequencia","setFrequencia","NovaFrequencia","setNovaFrequencia","console","log","warn","columns","title","field","editable","data","get","frequency","map","a","key","id","obj2","Object","assign","onRowAdd","newRow","Promise","resolve","reject","updatedRows","Math","floor","random","setTimeout","onRowDelete","selectedRow","index","tableData","splice","onRowUpdate","updatedRow","oldRow","actionsColumnIndex","addRowPosition"],"mappings":"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","sourcesContent":["import { API } from 'Infrastructure/APIS';\nimport MaterialTable from 'material-table';\nimport React, { useEffect, useState } from 'react';\n\n\n// import { Container } from './styles';\n\nfunction Screens() {\n    const [frequencia, setFrequencia]: any = useState(); // a que ser치 renderizada na tabela.\n    const [NovaFrequencia, setNovaFrequencia]: any = useState() // a quqe ser치 enviada para atualizar no backend\n  console.log(NovaFrequencia)\n  console.warn(frequencia)\n    \n    const columns: any = [\n        { title: \"Nome\", field: \"nome\", editable: false },\n        { title: \"Cargo\", field: \"cargo\" },\n        { title: \"janeiro\", field: \"janeiro\" },\n        { title: \"abril\", field: 'abril', },\n        { title: \"maio\", field: \"maio\", },\n        { title: \"junho\", field: \"junho\", },\n        { title: \"julho\", field: \"julho\", },\n        { title: \"agosto\", field: \"agosto\", },\n        { title: \"setembro\", field: \"setembro\", },\n        { title: \"outubro\", field: \"outubro\", },\n        { title: \"novembro\", field: \"novembro\", },\n        { title: \"dezembro\", field: \"dezembro\", },\n      ]\n\n    useEffect(() =>{\n        (async () => {\n            const { data } = await API.get(\"/servidor/frequencia\");\n            const frequency = data.map((a:any, key: any) =>{\n              console.log(a.frequencia)\n              delete a.frequencia.id\n              const obj2 = Object.assign(a,a.frequencia[0])\n              return obj2\n            })\n            setFrequencia(frequency);\n          })();\n    },[])\n\n    return (\n        <div>\n            <MaterialTable\n                data={frequencia}\n                columns={columns}\n                editable={{\n                    onRowAdd: (newRow) => new Promise((resolve:any, reject) => {\n                      const updatedRows = [...frequencia, { id: Math.floor(Math.random() * 100), ...newRow }]\n                      setTimeout(() => {\n                        setFrequencia(updatedRows)\n                        setNovaFrequencia(newRow)\n                        resolve()\n                      }, 2000)\n                    }),\n                    onRowDelete: (selectedRow:any) => new Promise((resolve:any, reject) => {\n                      const index = selectedRow.tableData.id;\n                      const updatedRows = [...frequencia]\n                      updatedRows.splice(index, 1)\n                      setTimeout(() => {\n                        setFrequencia(updatedRows)\n                        resolve()\n                      }, 2000)\n                    }),\n                    onRowUpdate:(updatedRow,oldRow)=>new Promise((resolve:any,reject)=>{\n                      const index= oldRow.tableData.id;\n                      const updatedRows=[...frequencia]\n                      updatedRows[index]=updatedRow\n                      setTimeout(() => {\n                        setFrequencia(updatedRows)\n                        resolve()\n                    }, 2000)\n                    })\n          \n                  }}\n                  options={{\n                    actionsColumnIndex: -1, addRowPosition: \"first\"\n                  }}\n            />\n        </div>\n    )\n}\n\nexport default Screens;"]},"metadata":{},"sourceType":"module"}