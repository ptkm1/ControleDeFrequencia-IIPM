{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { API } from 'Infrastructure/APIS';\nimport { useEffect, useState } from 'react'; // import { Container } from './styles';\n\nfunction useFrequencia() {\n  _s();\n\n  const [frequencia, setFrequencia] = useState();\n  const [NovaFrequencia, setNovaFrequencia] = useState();\n  const columns = [{\n    title: \"Nome\",\n    field: \"nome\"\n  }, {\n    title: \"Cargo\",\n    field: \"cargo\"\n  }, {\n    title: \"Matricula\",\n    field: \"matricula\"\n  }, {\n    title: \"Telefone\",\n    field: \"telefone\"\n  }, {\n    title: \"janeiro\",\n    field: \"janeiro\"\n  }, {\n    title: \"fevereiro\",\n    field: \"fevereiro\"\n  }, {\n    title: \"março\",\n    field: \"marco\"\n  }, {\n    title: \"abril\",\n    field: 'abril'\n  }, {\n    title: \"maio\",\n    field: \"maio\"\n  }, {\n    title: \"junho\",\n    field: \"junho\"\n  }, {\n    title: \"julho\",\n    field: \"julho\"\n  }, {\n    title: \"agosto\",\n    field: \"agosto\"\n  }, {\n    title: \"setembro\",\n    field: \"setembro\"\n  }, {\n    title: \"outubro\",\n    field: \"outubro\"\n  }, {\n    title: \"novembro\",\n    field: \"novembro\"\n  }, {\n    title: \"dezembro\",\n    field: \"dezembro\"\n  }];\n  useEffect(() => {\n    (async () => {\n      const {\n        data\n      } = await API.get(\"/servidor/frequencia\");\n      const frequency = data.map((a, key) => {\n        const frequencia = a.frequencia[0];\n        frequencia['idFrequencia'] = frequencia === null || frequencia === void 0 ? void 0 : frequencia.id;\n        (frequencia === null || frequencia === void 0 ? true : delete frequencia.id) && delete frequencia.frequencia;\n        const frequenciaConcatenada = Object.assign(a, frequencia);\n        return frequenciaConcatenada;\n      });\n      setFrequencia(frequency);\n    })();\n  }, [NovaFrequencia]);\n\n  const handleAddUser = async payload => {\n    try {\n      if (payload.janeiro) {\n        alert(\"Não adicione informações de presença ao criar usuário!\");\n        throw Error();\n      }\n\n      const {\n        data\n      } = await API.post('/servidor', payload);\n      setNovaFrequencia(data);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const handleDeleteUser = async payload => {\n    try {\n      const {\n        data\n      } = await API.delete(`/servidor/${payload.id}`);\n      setNovaFrequencia(data);\n      window.location.reload();\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const handleUpdateUser = async payload => {\n    const servidor = {\n      nome: payload.nome,\n      telefone: payload.telefone,\n      matricula: payload.matricula,\n      rg: payload.rg,\n      endereco: payload.endereco,\n      cargo: payload.cargo,\n      data_de_nascimento: payload.data_de_nascimento,\n      tipoDoServidor: payload.tipoDoServidor\n    };\n    const frequencia = {\n      janeiro: payload.janeiro,\n      fevereiro: payload.fevereiro,\n      marco: payload.marco,\n      abril: payload.abril,\n      maio: payload.maio,\n      junho: payload.junho,\n      julho: payload.julho,\n      setembro: payload.setembro,\n      outubro: payload.outubro,\n      novembro: payload.novembro,\n      dezembro: payload.dezembro\n    };\n\n    try {\n      const {\n        data\n      } = await API.patch(`/servidor/${payload.id}`, servidor);\n      const {\n        data: updateFrequencia\n      } = await API.patch(`/frequencia/${payload.idFrequencia}`, frequencia);\n      console.log(updateFrequencia);\n      setNovaFrequencia(data);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  return {\n    frequencia,\n    setFrequencia,\n    NovaFrequencia,\n    setNovaFrequencia,\n    handleAddUser,\n    handleDeleteUser,\n    handleUpdateUser,\n    columns\n  };\n}\n\n_s(useFrequencia, \"dl5FUZe1l9aNGqd9tvU9uXLO0q0=\");\n\nexport default useFrequencia;","map":{"version":3,"sources":["/home/patrick/Desktop/IIPM_Frequencia/Baseado/front/src/Presentation/Screens/Frequencia/functions.tsx"],"names":["API","useEffect","useState","useFrequencia","frequencia","setFrequencia","NovaFrequencia","setNovaFrequencia","columns","title","field","data","get","frequency","map","a","key","id","frequenciaConcatenada","Object","assign","handleAddUser","payload","janeiro","alert","Error","post","error","console","handleDeleteUser","delete","window","location","reload","handleUpdateUser","servidor","nome","telefone","matricula","rg","endereco","cargo","data_de_nascimento","tipoDoServidor","fevereiro","marco","abril","maio","junho","julho","setembro","outubro","novembro","dezembro","patch","updateFrequencia","idFrequencia","log"],"mappings":"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","sourcesContent":["import { API } from 'Infrastructure/APIS';\nimport React, { useEffect, useState } from 'react';\n\n// import { Container } from './styles';\n\nfunction useFrequencia() {\n\n\n    const [frequencia, setFrequencia]: any = useState();\n    const [NovaFrequencia, setNovaFrequencia]: any = useState()\n\n    const columns: any = [\n        { title: \"Nome\", field: \"nome\", },\n        { title: \"Cargo\", field: \"cargo\" },\n        { title: \"Matricula\", field: \"matricula\" },\n        { title: \"Telefone\", field: \"telefone\" },\n        { title: \"janeiro\", field: \"janeiro\" },\n        { title: \"fevereiro\", field: \"fevereiro\" },\n        { title: \"março\", field: \"marco\" },\n        { title: \"abril\", field: 'abril', },\n        { title: \"maio\", field: \"maio\", },\n        { title: \"junho\", field: \"junho\", },\n        { title: \"julho\", field: \"julho\", },\n        { title: \"agosto\", field: \"agosto\", },\n        { title: \"setembro\", field: \"setembro\", },\n        { title: \"outubro\", field: \"outubro\", },\n        { title: \"novembro\", field: \"novembro\", },\n        { title: \"dezembro\", field: \"dezembro\", },\n    ]\n\n    useEffect(() => {\n        (async () => {\n            const { data } = await API.get(\"/servidor/frequencia\");\n            const frequency = data.map((a: any, key: any) => {\n                const frequencia = a.frequencia[0]\n                frequencia['idFrequencia'] = frequencia?.id\n                delete frequencia?.id && delete frequencia.frequencia\n                const frequenciaConcatenada = Object.assign(a, frequencia)\n                return frequenciaConcatenada\n            })\n            setFrequencia(frequency);\n        })();\n    }, [NovaFrequencia])\n\n    const handleAddUser = async (payload: any) => {\n        try {\n            if (payload.janeiro) {\n                alert(\"Não adicione informações de presença ao criar usuário!\")\n                throw Error()\n            }\n            const { data } = await API.post('/servidor', payload)\n            setNovaFrequencia(data)\n        } catch (error) {\n            console.error(error)\n        }\n    }\n\n    const handleDeleteUser = async (payload: any) => {\n        try {\n            const { data } = await API.delete(`/servidor/${payload.id}`)\n            setNovaFrequencia(data)\n            window.location.reload()\n        } catch (error) {\n            console.error(error)\n        }\n    }\n\n    const handleUpdateUser = async (payload: any) => {\n\n        const servidor = {\n            nome: payload.nome,\n            telefone: payload.telefone,\n            matricula: payload.matricula,\n            rg: payload.rg,\n            endereco: payload.endereco,\n            cargo: payload.cargo,\n            data_de_nascimento: payload.data_de_nascimento,\n            tipoDoServidor: payload.tipoDoServidor,\n        }\n\n        const frequencia = {\n            janeiro: payload.janeiro,\n            fevereiro: payload.fevereiro,\n            marco: payload.marco,\n            abril: payload.abril,\n            maio: payload.maio,\n            junho: payload.junho,\n            julho: payload.julho,\n            setembro: payload.setembro,\n            outubro: payload.outubro,\n            novembro: payload.novembro,\n            dezembro: payload.dezembro\n        }\n        try {\n            const { data } = await API.patch(`/servidor/${payload.id}`, servidor)\n            const { data: updateFrequencia } = await API.patch(`/frequencia/${payload.idFrequencia}`, frequencia)\n            console.log(updateFrequencia)\n            setNovaFrequencia(data)\n        } catch (error) {\n            console.error(error)\n        }\n    }\n\n\n    return {\n        frequencia,\n        setFrequencia,\n        NovaFrequencia,\n        setNovaFrequencia,\n        handleAddUser,\n        handleDeleteUser,\n        handleUpdateUser,\n        columns\n    }\n}\n\nexport default useFrequencia;"]},"metadata":{},"sourceType":"module"}