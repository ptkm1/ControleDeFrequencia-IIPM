{"ast":null,"code":"var _jsxFileName = \"/home/patrick/Desktop/IIPM_Frequencia/Baseado/front/src/Presentation/Screens/Sandbox.Screen.tsx\",\n    _s = $RefreshSig$();\n\nimport { API } from 'Infrastructure/APIS';\nimport MaterialTable from 'material-table';\nimport React, { useEffect, useState } from 'react'; // import { Container } from './styles';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Screens() {\n  _s();\n\n  const [frequencia, setFrequencia] = useState();\n  const columns = [{\n    title: \"Janeiro\",\n    field: \"janeiro\",\n    editable: false\n  }, {\n    title: \"Name\",\n    field: \"fevereiro\"\n  }, {\n    title: \"Email\",\n    field: \"março\"\n  }, {\n    title: \"abril\",\n    field: 'abril'\n  }, {\n    title: \"maio\",\n    field: \"maio\"\n  }];\n  useEffect(() => {\n    (async () => {\n      const {\n        data\n      } = await API.get(\"/servidor/frequencia\");\n      setFrequencia(data);\n    })();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(MaterialTable, {\n      data: frequencia,\n      columns: columns,\n      editable: {\n        onRowAdd: newRow => new Promise((resolve, reject) => {\n          const updatedRows = [...frequencia, {\n            id: Math.floor(Math.random() * 100),\n            ...newRow\n          }];\n          setTimeout(() => {\n            setFrequencia(updatedRows);\n            resolve();\n          }, 2000);\n        }),\n        onRowDelete: selectedRow => new Promise((resolve, reject) => {\n          const index = selectedRow.tableData.id;\n          const updatedRows = [...frequencia];\n          updatedRows.splice(index, 1);\n          setTimeout(() => {\n            setFrequencia(updatedRows);\n            resolve();\n          }, 2000);\n        }),\n        onRowUpdate: (updatedRow, oldRow) => new Promise((resolve, reject) => {\n          const index = oldRow.tableData.id;\n          const updatedRows = [...frequencia];\n          updatedRows[index] = updatedRow;\n          setTimeout(() => {\n            setFrequencia(updatedRows);\n            resolve();\n          }, 2000);\n        })\n      },\n      options: {\n        actionsColumnIndex: -1,\n        addRowPosition: \"first\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Screens, \"skD1M4TtoKVMsdUwqWR6cXbp2U0=\");\n\n_c = Screens;\nexport default Screens;\n\nvar _c;\n\n$RefreshReg$(_c, \"Screens\");","map":{"version":3,"sources":["/home/patrick/Desktop/IIPM_Frequencia/Baseado/front/src/Presentation/Screens/Sandbox.Screen.tsx"],"names":["API","MaterialTable","React","useEffect","useState","Screens","frequencia","setFrequencia","columns","title","field","editable","data","get","onRowAdd","newRow","Promise","resolve","reject","updatedRows","id","Math","floor","random","setTimeout","onRowDelete","selectedRow","index","tableData","splice","onRowUpdate","updatedRow","oldRow","actionsColumnIndex","addRowPosition"],"mappings":"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","sourcesContent":["import { API } from 'Infrastructure/APIS';\nimport MaterialTable from 'material-table';\nimport React, { useEffect, useState } from 'react';\n\n\n// import { Container } from './styles';\n\nfunction Screens() {\n    const [frequencia, setFrequencia]: any = useState();\n\n    const columns: any = [\n        { title: \"Janeiro\", field: \"janeiro\", editable: false },\n        { title: \"Name\", field: \"fevereiro\" },\n        { title: \"Email\", field: \"março\" },\n        { title: \"abril\", field: 'abril', },\n        { title: \"maio\", field: \"maio\", }\n      ]\n\n    useEffect(() =>{\n        (async () => {\n            const { data } = await API.get(\"/servidor/frequencia\");\n            setFrequencia(data);\n          })();\n    },[])\n\n    return (\n        <div>\n            <MaterialTable\n                data={frequencia}\n                columns={columns}\n                editable={{\n                    onRowAdd: (newRow) => new Promise((resolve:any, reject) => {\n                      const updatedRows = [...frequencia, { id: Math.floor(Math.random() * 100), ...newRow }]\n                      setTimeout(() => {\n                        setFrequencia(updatedRows)\n                        resolve()\n                      }, 2000)\n                    }),\n                    onRowDelete: (selectedRow:any) => new Promise((resolve:any, reject) => {\n                      const index = selectedRow.tableData.id;\n                      const updatedRows = [...frequencia]\n                      updatedRows.splice(index, 1)\n                      setTimeout(() => {\n                        setFrequencia(updatedRows)\n                        resolve()\n                      }, 2000)\n                    }),\n                    onRowUpdate:(updatedRow,oldRow)=>new Promise((resolve:any,reject)=>{\n                      const index= oldRow.tableData.id;\n                      const updatedRows=[...frequencia]\n                      updatedRows[index]=updatedRow\n                      setTimeout(() => {\n                        setFrequencia(updatedRows)\n                        resolve()\n                    }, 2000)\n                    })\n          \n                  }}\n                  options={{\n                    actionsColumnIndex: -1, addRowPosition: \"first\"\n                  }}\n            />\n        </div>\n    )\n}\n\nexport default Screens;"]},"metadata":{},"sourceType":"module"}