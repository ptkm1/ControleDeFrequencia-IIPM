{"ast":null,"code":"var _jsxFileName = \"/home/patrick/Desktop/IIPM_Frequencia/Baseado/front/src/Presentation/Screens/Sandbox.Screen.tsx\",\n    _s = $RefreshSig$();\n\nimport { API } from 'Infrastructure/APIS';\nimport MaterialTable from 'material-table';\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Screens() {\n  _s();\n\n  const [frequencia, setFrequencia] = useState(); // a que ser치 renderizada na tabela.\n\n  const [NovaFrequencia, setNovaFrequencia] = useState(); // a quqe ser치 enviada para atualizar no backend\n\n  console.log(NovaFrequencia);\n  console.warn(frequencia);\n  const columns = [{\n    title: \"Nome\",\n    field: \"nome\",\n    editable: false\n  }, {\n    title: \"Cargo\",\n    field: \"cargo\"\n  }, {\n    title: \"janeiro\",\n    field: \"janeiro\"\n  }, {\n    title: \"abril\",\n    field: 'abril'\n  }, {\n    title: \"maio\",\n    field: \"maio\"\n  }, {\n    title: \"junho\",\n    field: \"junho\"\n  }, {\n    title: \"julho\",\n    field: \"julho\"\n  }, {\n    title: \"agosto\",\n    field: \"agosto\"\n  }, {\n    title: \"setembro\",\n    field: \"setembro\"\n  }, {\n    title: \"outubro\",\n    field: \"outubro\"\n  }, {\n    title: \"novembro\",\n    field: \"novembro\"\n  }, {\n    title: \"dezembro\",\n    field: \"dezembro\"\n  }];\n  useEffect(() => {\n    (async () => {\n      const {\n        data\n      } = await API.get(\"/servidor/frequencia\");\n      const frequency = data.map((a, key) => {\n        const frequencia = a.frequencia[0];\n        delete frequencia.id && delete a.frequencia;\n        const frequenciaConcatenada = Object.assign(a, frequencia);\n        return frequenciaConcatenada;\n      });\n      setFrequencia(frequency);\n    })();\n  }, []);\n\n  const handleAddRow = newRow => new Promise((resolve, reject) => {\n    const updatedRows = [...frequencia, {\n      id: Math.floor(Math.random() * 100),\n      ...newRow\n    }];\n    setTimeout(() => {\n      setFrequencia(updatedRows);\n      setNovaFrequencia(newRow);\n      resolve();\n    }, 2000);\n  });\n\n  const handleDeleteRow = selectedRow => new Promise((resolve, reject) => {\n    const index = selectedRow.tableData.id;\n    const updatedRows = [...frequencia];\n    updatedRows.splice(index, 1);\n    setTimeout(() => {\n      setFrequencia(updatedRows);\n      resolve();\n    }, 2000);\n  });\n\n  const handleUpdateRow = (updatedRow, oldRow) => new Promise((resolve, reject) => {\n    const index = oldRow.tableData.id;\n    const updatedRows = [...frequencia];\n    updatedRows[index] = updatedRow;\n    setTimeout(() => {\n      setFrequencia(updatedRows);\n      resolve();\n    }, 2000);\n  });\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(MaterialTable, {\n      data: frequencia,\n      columns: columns,\n      editable: {\n        onRowAdd: handleAddRow,\n        onRowDelete: handleDeleteRow,\n        onRowUpdate: handleUpdateRow\n      },\n      options: {\n        actionsColumnIndex: -1,\n        addRowPosition: \"first\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Screens, \"dl5FUZe1l9aNGqd9tvU9uXLO0q0=\");\n\n_c = Screens;\nexport default Screens;\n\nvar _c;\n\n$RefreshReg$(_c, \"Screens\");","map":{"version":3,"sources":["/home/patrick/Desktop/IIPM_Frequencia/Baseado/front/src/Presentation/Screens/Sandbox.Screen.tsx"],"names":["API","MaterialTable","React","useEffect","useState","Screens","frequencia","setFrequencia","NovaFrequencia","setNovaFrequencia","console","log","warn","columns","title","field","editable","data","get","frequency","map","a","key","id","frequenciaConcatenada","Object","assign","handleAddRow","newRow","Promise","resolve","reject","updatedRows","Math","floor","random","setTimeout","handleDeleteRow","selectedRow","index","tableData","splice","handleUpdateRow","updatedRow","oldRow","onRowAdd","onRowDelete","onRowUpdate","actionsColumnIndex","addRowPosition"],"mappings":"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","sourcesContent":["import { API } from 'Infrastructure/APIS';\nimport MaterialTable from 'material-table';\nimport React, { useEffect, useState } from 'react';\n\nfunction Screens() {\n  const [frequencia, setFrequencia]: any = useState(); // a que ser치 renderizada na tabela.\n  const [NovaFrequencia, setNovaFrequencia]: any = useState() // a quqe ser치 enviada para atualizar no backend\n  console.log(NovaFrequencia)\n  console.warn(frequencia)\n\n  const columns: any = [\n    { title: \"Nome\", field: \"nome\", editable: false },\n    { title: \"Cargo\", field: \"cargo\" },\n    { title: \"janeiro\", field: \"janeiro\" },\n    { title: \"abril\", field: 'abril', },\n    { title: \"maio\", field: \"maio\", },\n    { title: \"junho\", field: \"junho\", },\n    { title: \"julho\", field: \"julho\", },\n    { title: \"agosto\", field: \"agosto\", },\n    { title: \"setembro\", field: \"setembro\", },\n    { title: \"outubro\", field: \"outubro\", },\n    { title: \"novembro\", field: \"novembro\", },\n    { title: \"dezembro\", field: \"dezembro\", },\n  ]\n\n  useEffect(() => {\n    (async () => {\n      const { data } = await API.get(\"/servidor/frequencia\");\n      const frequency = data.map((a: any, key: any) => {\n        const frequencia = a.frequencia[0]\n        delete frequencia.id && delete a.frequencia\n        const frequenciaConcatenada = Object.assign(a, frequencia)\n        return frequenciaConcatenada\n      })\n      setFrequencia(frequency);\n    })();\n  }, [])\n\n\n  const handleAddRow = (newRow: any) => new Promise((resolve: any, reject) => {\n    const updatedRows = [...frequencia, { id: Math.floor(Math.random() * 100), ...newRow }]\n\n    setTimeout(() => {\n      setFrequencia(updatedRows)\n      setNovaFrequencia(newRow)\n      resolve()\n    }, 2000)\n\n  })\n\n  const handleDeleteRow = (selectedRow: any) => new Promise((resolve: any, reject) => {\n    const index = selectedRow.tableData.id;\n    const updatedRows = [...frequencia]\n    updatedRows.splice(index, 1)\n    setTimeout(() => {\n      setFrequencia(updatedRows)\n      resolve()\n    }, 2000)\n  })\n\n  const handleUpdateRow = (updatedRow: any, oldRow: any) => new Promise((resolve: any, reject) => {\n    const index = oldRow.tableData.id;\n    const updatedRows = [...frequencia]\n    updatedRows[index] = updatedRow\n    setTimeout(() => {\n      setFrequencia(updatedRows)\n      resolve()\n    }, 2000)\n  })\n\n  return (\n    <div>\n      <MaterialTable\n        data={frequencia}\n        columns={columns}\n        editable={{\n          onRowAdd: handleAddRow,\n          onRowDelete: handleDeleteRow,\n          onRowUpdate: handleUpdateRow\n        }}\n        options={{\n          actionsColumnIndex: -1, addRowPosition: \"first\"\n        }}\n      />\n    </div>\n  )\n}\n\nexport default Screens;"]},"metadata":{},"sourceType":"module"}